---
// Import the necessary dependencies.
import AuthBtn from "@components/buttons/AuthBtn.astro";
import ContactIconBlock from "@components/blog/blocks/ContactIconBlock.astro";
import TextInput from "@components/blog/blocks/TextInput.astro";
import EmailContactInput from "@components/blog/blocks/EmailContactInput.astro";
import PhoneInput from "@components/blog/blocks/PhoneInput.astro";
import TextAreaInput from "@components/blog/blocks/TextAreaInput.astro";
import Icon from "@components/icons/icon.astro";

// Define the variables that will be used in this component
const title: string = "关于本站";
const subTitle: string =
  "您有疑问或想讨论项目吗？联系我们，让我们用我们的工具和服务创建完美的解决方案。";
const formTitle: string = "请填写表单";
const formSubTitle: string = "我们将在 1-2 个工作日内回复您。";

const { EmailUrl, mailConfig } = Astro.props

---
<!-- frontmatter 变量接收域  -->
<div style="display: none;" id="Myfrontmatter">
  <span id="EmailUrl">{EmailUrl}</span>
  <span id="mailConfig">{mailConfig}</span>
</div>

<!-- Contact Us -->
<section class="mx-auto max-w-[85rem] px-4 py-10 sm:px-6 lg:px-8 lg:py-14">
  <div class="mx-auto max-w-2xl lg:max-w-5xl">
    <div class="text-center">
      <h1
        class="text-balance text-2xl font-bold tracking-tight text-neutral-800 dark:text-neutral-200 md:text-4xl md:leading-tight"
      >
        {title}
      </h1>
      <p class="mt-1 text-pretty text-neutral-600 dark:text-neutral-400">
        {subTitle}
      </p>
    </div>

    <div class="mt-12 grid items-center gap-6 lg:grid-cols-2 lg:gap-16">
      <div class="flex flex-col rounded-xl p-4 sm:p-6 lg:p-8">
        <h2
          class="mb-8 text-xl font-bold text-neutral-700 dark:text-neutral-300"
        >
          {formTitle}
        </h2>
        <!-- Form for user input with various input fields.-->
        <!-- Each field utilizes a different input component for the specific type of input (text, email, phone, and textarea)-->
        <form id="myForm" method="POST">
          <div class="grid gap-4">
            <TextInput
                id="hs-lastname-contacts"
                label="姓名"
                name="firstname"/>
            <EmailContactInput id="hs-email-contacts" />
            <PhoneInput id="hs-phone-number" />
            <TextAreaInput
              id="hs-about-contacts"
              label="请输入详情"
              name="about"
            />
          </div>

          <div class="mt-4 grid">
            <AuthBtn title="发送消息" />
          </div>

          <div class="flex items-center mb-4 pt-4">
            <input checked id="checkbox-1" type="checkbox" value="true" name="checkbox" class="w-4 h-4 text-blue-600 bg-gray-100 border-gray-300 rounded focus:ring-blue-500 dark:focus:ring-blue-600 dark:ring-offset-gray-800 dark:focus:ring-offset-gray-800 focus:ring-2 dark:bg-gray-700 dark:border-gray-600" >
            <label for="checkbox-1" class="ms-2 text-sm font-medium text-gray-900 dark:text-gray-300">我同意这些<a href="#" class="text-blue-600 hover:underline dark:text-blue-500">条款和条件</a>。</label>
         </div>
      
          <div class="mt-3 text-center">
            <p class="text-sm text-neutral-600 dark:text-neutral-400">
              {formSubTitle}
            </p>
          </div>
        </form>
      </div>

      <!--ContactIconBlocks are used to display different methods of contacting, including visiting office, email, browsing knowledgebase, and FAQ.-->
      <div class="divide-y divide-neutral-300 dark:divide-neutral-700">
        <ContactIconBlock
          heading="Base de connaissances"
          content="Parcourez tous nos articles de base de connaissances."
          isLinkVisible={true}
          linkTitle="Visiter les guides et tutoriels"
          linkURL="#"
          isArrowVisible={true}
          ><Icon name="question" />
        </ContactIconBlock>

        <ContactIconBlock
          heading="FAQ"
          content="Explorez notre FAQ pour des réponses rapides et claires aux questions courantes."
          isLinkVisible={true}
          linkTitle="Visiter la FAQ"
          linkURL="#"
          isArrowVisible={true}
          ><Icon name="chatBubble" />
        </ContactIconBlock>

        <ContactIconBlock
          heading="Visitez notre bureau"
          content="ScrewFast UK"
          isAddressVisible={true}
          addressContent="72 Union Terrace, E10 4PE London"
          ><Icon name="mapPin" />
        </ContactIconBlock>

        <ContactIconBlock
          heading="Contactez-nous par e-mail"
          content="Préférez-vous le texte écrit ? Envoyez-nous un e-mail à"
          isLinkVisible={true}
          linkTitle="support@screwfast.uk"
          linkURL="#"
          ><Icon name="envelopeOpen" />
        </ContactIconBlock>
      </div>
    </div>
  </div>
</section>


<!-- 邮件发送 -->
<script>

  const from = document.getElementById('myForm')
  if(from){
    from.addEventListener('submit', function(event) {
        // 阻止表单提交
        event.preventDefault();
        // 执行验证逻辑
        var formData = new FormData(this); // 'this' refers to the form element
        if(!check_data(formData)) return; // 验证失败，返回

        let data = {
          name: "jxj1014",
          email: "2039916844@qq.com",
          phone: "123456789",
          detail: "内容"
        }
        let mailOptions = {from: "jxj1014@qq.com",to: "2039916844@qq.com",subject: "意见反馈",html: "内容",data: data}
        for (var pair of formData.entries()) {
          if(pair[0] === 'about'){
            data.detail = pair[1].toString()
          }else if(pair[0] === 'email'){
            data.email = pair[1].toString()
            mailOptions.to = pair[1].toString()
          }else if(pair[0] === 'firstname'){
            data.name = pair[1].toString()
          }else if(pair[0] === 'phone'){
            data.phone = pair[1].toString()
          }
          console.log(pair[0] + ': ' + pair[1]);
        }
        mailOptions.data = data
        console.log("mailOptions", mailOptions);
      // 调用 node 接口
      fetch('http://182.92.85.80:3000/send', {
          'method': 'POST',
          'body': JSON.stringify(mailOptions),
          'headers': {
              'content-type': 'application/json; charset=UTF-8'
          }
      }).then(res => {return res.text()}).then(data => {
        console.log(data);
        if(data === 'success'){
          GrowlNotification.notify({description: data,type: 'success'});
        }else{
          GrowlNotification.notify({description: data,type: 'warning'});
        }
      });

    });
  }




  /**
   * 验证表单数据
   * @param formData 表单数据
   * @returns boolean
   */
  function check_data(formData: FormData){
        if(!formData.has('checkbox')) {
          GrowlNotification.notify({description: '请先同意我们的条款和条件',type: 'warning',title:null});
          return false;
        }

        // 必填项
        const email_error = document.getElementById('email_error')
        const email_contacts = document.getElementById('hs-email-contacts')
        if(!formData.get('email')){
          email_contacts?.setAttribute('class', 'block w-full rounded-lg border border-neutral-200 bg-neutral-50 px-4 py-3 text-sm text-neutral-700 placeholder:text-neutral-500 focus:border-neutral-200 focus:outline-none focus:ring focus:ring-neutral-400 disabled:pointer-events-none disabled:opacity-50 dark:border-neutral-600 dark:bg-neutral-700/30 dark:text-neutral-300 dark:placeholder:text-neutral-400 dark:focus:ring-1 bg-red-50 border border-red-500 text-red-900')
          email_error.innerText = 'Email is required！'
          return false;
        }else{
          email_contacts?.setAttribute('class', 'block w-full rounded-lg border border-neutral-200 bg-neutral-50 px-4 py-3 text-sm text-neutral-700 placeholder:text-neutral-500 focus:border-neutral-200 focus:outline-none focus:ring focus:ring-neutral-400 disabled:pointer-events-none disabled:opacity-50 dark:border-neutral-600 dark:bg-neutral-700/30 dark:text-neutral-300 dark:placeholder:text-neutral-400 dark:focus:ring-1')
          email_error.innerText = ''
        }
        return true;
  }



</script>


